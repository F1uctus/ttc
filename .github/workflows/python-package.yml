# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package check

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10"]

    env:
      POETRY_VIRTUALENVS_CREATE: false

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3.0.0
      with:
        python-version: ${{ matrix.python-version }}

    - name: Set up Poetry cache for Python dependencies
      uses: actions/cache@v2
      if: startsWith(runner.os, 'Linux')
      with:
        path: ~/.cache/pypoetry
        key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
        restore-keys: ${{ runner.os }}-poetry-

    - name: Set up pre-commit cache
      uses: actions/cache@v2
      if: startsWith(runner.os, 'Linux')
      with:
        path: ~/.cache/pre-commit
        key: ${{ runner.os }}-pre-commit-${{ hashFiles('.pre-commit-config.yaml') }}
        restore-keys: ${{ runner.os }}-pre-commit-

    - name: Install Poetry
      run: |
        curl -fsS -o get-poetry.py https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py
        python get-poetry.py -y
        echo "$HOME/.poetry/bin" >> $GITHUB_PATH

    - name: Install dependencies
      run: poetry install --no-interaction

    - name: Lint with MyPy
      run: |
        poetry run mypy ttc

    - name: Test with pytest
      run: |
        poetry run pytest --maxfail=8

    - name: Run pre-commit hooks
      run: pre-commit run --all-files
